"use strict";(self.webpackChunksymfony_anagrams_docs=self.webpackChunksymfony_anagrams_docs||[]).push([[1796],{1300:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"lists","title":"Word Lists","description":"Public Lists","source":"@site/docs/lists.md","sourceDirName":".","slug":"/lists","permalink":"/docs/lists","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/docs/introduction"},"next":{"title":"Practice Types","permalink":"/docs/Practice/practice-types"}}');var t=i(4848),r=i(8453);const l={},d="Word Lists",o={},a=[{value:"Public Lists",id:"public-lists",level:2},{value:"User Lists",id:"user-lists",level:2},{value:"Create a List",id:"create-a-list",level:3},{value:"Manage a List",id:"manage-a-list",level:3},{value:"Delete a List",id:"delete-a-list",level:4},{value:"Add Words",id:"add-words",level:4},{value:"Sessions",id:"sessions",level:4},{value:"Settings",id:"settings",level:4}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"word-lists",children:"Word Lists"})}),"\n",(0,t.jsx)(s.h2,{id:"public-lists",children:"Public Lists"}),"\n",(0,t.jsx)(s.h2,{id:"user-lists",children:"User Lists"}),"\n",(0,t.jsx)(s.p,{children:"A user list is a word list created and managed by a WotB user. Users must be logged in to interact with their lists."}),"\n",(0,t.jsx)(s.h3,{id:"create-a-list",children:"Create a List"}),"\n",(0,t.jsxs)(s.p,{children:["To create a list, navigate to ",(0,t.jsx)(s.code,{children:"YOUR LISTS"})," and click the ",(0,t.jsx)(s.code,{children:"New List"})," button."]}),"\n",(0,t.jsx)(s.p,{children:"Fill out the form with the following fields:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Name"}),": The name of your list."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Description"}),": (Optional) A short description of your list."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Lexicon"}),": The list is linked to a specific Scrabble lexicon. Words added to the list will be validated against this lexicon."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Order"}),": Defines the order in which words will be presented during [Regular Practice]. This can be updated later in [List Settings].","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Random"}),": Words will be chosen randomly, but only from those not seen yet. This ensures no word is repeated until all others have been reviewed."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Probability (Descending)"}),": Words will be presented in descending order of likelihood to draw."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Add File with Words"}),': (Optional) Upload a file containing one word per line. Words should be in their canonical form (lemma), e.g., "mouse" instead of "mice." You can also add words manually later.']}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Look for Duplicates on All My Lists"}),": Prevent adding words that already exist in your other lists by enabling this checkbox."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Good to know"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Due to mobile frontend requirements, only words with 8 letters or fewer can currently be added. However, a canonical form longer than 8 letters is allowed if it has a valid shorter form."}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"manage-a-list",children:"Manage a List"}),"\n",(0,t.jsx)(s.h4,{id:"delete-a-list",children:"Delete a List"}),"\n",(0,t.jsx)(s.p,{children:'Deleting a list is irreversible ("hard delete"), meaning all metadata related to the list will be permanently lost. Use with caution.'}),"\n",(0,t.jsx)(s.h4,{id:"add-words",children:"Add Words"}),"\n",(0,t.jsxs)(s.p,{children:["Click the ",(0,t.jsx)(s.code,{children:"Add Word"})," button to open a popup. You can add words using one of two methods:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Add Single Word"}),": Add a single word with an optional note."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Add from List"}),": Add multiple words from a file. For details, see the ",(0,t.jsx)(s.a,{href:"#create-a-list",children:"Create a List"})," section."]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"sessions",children:"Sessions"}),"\n",(0,t.jsx)(s.p,{children:"View all your past practice sessions in this section."}),"\n",(0,t.jsx)(s.h4,{id:"settings",children:"Settings"}),"\n",(0,t.jsx)(s.p,{children:"Modify your list's metadata (name, description, drawing order) and adjust additional parameters:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"(SR) New Cards Daily Limit"}),": Set a daily limit for new cards in spaced repetition practice."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Show Definition During Practice"}),": Enable this to display word definitions during practice."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Show Note During Practice"}),": Enable this to display your custom notes during practice."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Show Extensions During Practice"}),": Enable this to display valid word extensions during practice."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>l,x:()=>d});var n=i(6540);const t={},r=n.createContext(t);function l(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);